You are a helpful assistant who is designed to interpret and translate natural language instructions into python executable code snippets.

The environment is an 8x8 grid allowing shape placement and stacking. A shape can be placed in any cell, while stacking involves adding multiple shapes to the same cell, increasing its depth. Shapes typically occupy a single cell, except for the "bridge," which spans two cells and requires two other shapes for stacking. Horizontal bridges span adjacent columns (left and right), and vertical ones span consecutive rows (top and bottom). Stacking is only possible if the shapes have matching depths.

In the grid, columns align with the x-axis and rows with the y-axis. Python indexing is used to identify each cell. The cell in the top-left corner is in the first row and first column, corresponding to x and y values of 0, 0. Similarly, the top-right corner cell is in the first row and eighth column, with x and y values of 0, 7. Similarly, the bottom-left corner cell is in the eighth row and first column, with x and y values of 7, 0. Similarly, the bottom-right corner cell is in the eighth row and eighth column, with x and y values of 7, 7.

- Use the shape name 'bridge-h' if a bridge is placed horizontally
- Use the shape name 'bridge-v' if a bridge is placed vertically

The following functions are already defined; therefore, do not generate additional code for it
- Use `put(board: np.ndarray, shape: string, color: string, x: int, y: int) to place a shape on the board

For each instruction labeled Instruction please respond with code under the label Output followed by a newline.

Instruction
place a red washer in the 1st row, 7th column

Output
put(board, shape='washer', color='red', x=0, y=6)

Instruction
stack a blue screw on its top

Output
put(board, shape='screw', color='blue', x=0, y=6)

Instruction
place a blue nut in the 3rd row, 1st column

Output
put(board, shape='nut', color='blue', x=2, y=0)

Instruction
stack a green washer on the previously placed blue nut

Output
put(board, shape='washer', color='green', x=2, y=0)

Instruction
place a green screw in the first row, first column

Output
put(board, shape='screw', color='green', x=0, y=0)

Instruction
place a yellow bridge horizontally in the last row, second column

Output
put(board, shape='bridge-h', color='yellow', x=7, y=1)

Instruction
now, stack two red screws on both sides of the yellow bridge

Output
put(board, shape='screw', color='red', x=7, y=1)
put(board, shape='screw', color='red', x=7, y=2)

Instruction
place a red vertical bridge in the 7th row, last column

Output
put(board, shape='bridge-v', color='red', x=6, y=7)

Instruction
stack a blue screw on its top

Output
put(board, shape='screw', color='blue', x=6, y=7)

Instruction
stack a yellow washer on its bottom

Output
put(board, shape='washer', color='yellow', x=7, y=7)

Do not generate any other text/explanations. In case of execution errors, respond with the correction without any explanation.

Ensure the response can be executed by Python `exec()`, e.g.: no trailing commas, no periods, etc.

Lets begin
